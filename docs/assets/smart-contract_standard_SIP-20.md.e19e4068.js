import{_ as a,o as s,c as e,O as o}from"./chunks/framework.62a149d4.js";const C=JSON.parse('{"title":"SIP20-SRC20 Token Standard","description":"","frontmatter":{},"headers":[],"relativePath":"smart-contract/standard/SIP-20.md","filePath":"smart-contract/standard/SIP-20.md"}'),n={name:"smart-contract/standard/SIP-20.md"},t=o('<h1 id="sip20-src20-token-standard" tabindex="-1">SIP20-SRC20 Token Standard <a class="header-anchor" href="#sip20-src20-token-standard" aria-label="Permalink to &quot;SIP20-SRC20 Token Standard&quot;">​</a></h1><h2 id="simple-summary" tabindex="-1">Simple Summary <a class="header-anchor" href="#simple-summary" aria-label="Permalink to &quot;Simple Summary&quot;">​</a></h2><p>A standard interface for tokens.</p><h2 id="abstract" tabindex="-1">Abstract <a class="header-anchor" href="#abstract" aria-label="Permalink to &quot;Abstract&quot;">​</a></h2><p>The following standard allows for the implementation of a standard API for tokens within smart contracts. This standard provides basic functionality to transfer tokens, as well as allow tokens to be approved so they can be spent by another on-chain third party.</p><h2 id="motivation" tabindex="-1">Motivation <a class="header-anchor" href="#motivation" aria-label="Permalink to &quot;Motivation&quot;">​</a></h2><p>A standard interface allows any tokens on Ethereum to be re-used by other applications: from wallets to decentralized exchanges.</p><h2 id="specification" tabindex="-1">Specification <a class="header-anchor" href="#specification" aria-label="Permalink to &quot;Specification&quot;">​</a></h2><h2 id="token" tabindex="-1">Token <a class="header-anchor" href="#token" aria-label="Permalink to &quot;Token&quot;">​</a></h2><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><p><strong>NOTES</strong>:</p><ul><li>The following specifications use syntax from Solidity <code>0.4.17</code> (or above)</li><li>Callers MUST handle <code>false</code> from <code>returns (bool success)</code>. Callers MUST NOT assume that <code>false</code> is never returned!</li></ul><h4 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h4><p>Returns the name of the token - e.g. <code>&quot;MyToken&quot;</code>.</p><p>OPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">view</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">string</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="symbol" tabindex="-1">symbol <a class="header-anchor" href="#symbol" aria-label="Permalink to &quot;symbol&quot;">​</a></h4><p>Returns the symbol of the token. E.g. &quot;HIX&quot;.</p><p>OPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">symbol</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">view</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">string</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="decimals" tabindex="-1">decimals <a class="header-anchor" href="#decimals" aria-label="Permalink to &quot;decimals&quot;">​</a></h4><p>Returns the number of decimals the token uses - e.g. <code>8</code>, means to divide the token amount by <code>100000000</code> to get its user representation.</p><p>OPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">decimals</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">view</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">uint8</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="totalsupply" tabindex="-1">totalSupply <a class="header-anchor" href="#totalsupply" aria-label="Permalink to &quot;totalSupply&quot;">​</a></h4><p>Returns the total token supply.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">totalSupply</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">view</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">uint256</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="balanceof" tabindex="-1">balanceOf <a class="header-anchor" href="#balanceof" aria-label="Permalink to &quot;balanceOf&quot;">​</a></h4><p>Returns the account balance of another account with address <code>_owner</code>.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">balanceOf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_owner</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">view</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">balance</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="transfer" tabindex="-1">transfer <a class="header-anchor" href="#transfer" aria-label="Permalink to &quot;transfer&quot;">​</a></h4><p>Transfers <code>_value</code> amount of tokens to address <code>_to</code>, and MUST fire the <code>Transfer</code> event. The function SHOULD <code>throw</code> if the message caller&#39;s account balance does not have enough tokens to spend.</p><p><em>Note</em> Transfers of 0 values MUST be treated as normal transfers and fire the <code>Transfer</code> event.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">transfer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_to</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">success</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="transferfrom" tabindex="-1">transferFrom <a class="header-anchor" href="#transferfrom" aria-label="Permalink to &quot;transferFrom&quot;">​</a></h4><p>Transfers <code>_value</code> amount of tokens from address <code>_from</code> to address <code>_to</code>, and MUST fire the <code>Transfer</code> event.</p><p>The <code>transferFrom</code> method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf. This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies. The function SHOULD <code>throw</code> unless the <code>_from</code> account has deliberately authorized the sender of the message via some mechanism.</p><p><em>Note</em> Transfers of 0 values MUST be treated as normal transfers and fire the <code>Transfer</code> event.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">transferFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_from</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_to</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">success</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="approve" tabindex="-1">approve <a class="header-anchor" href="#approve" aria-label="Permalink to &quot;approve&quot;">​</a></h4><p>Allows <code>_spender</code> to withdraw from your account multiple times, up to the <code>_value</code> amount. If this function is called again it overwrites the current allowance with <code>_value</code>.</p><p><strong>NOTE</strong>: To prevent attack vectors like the one <a href="https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/" target="_blank" rel="noreferrer">described here</a> and discussed <a href="https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729" target="_blank" rel="noreferrer">here</a>, clients SHOULD make sure to create user interfaces in such a way that they set the allowance first to <code>0</code> before setting it to another value for the same spender. THOUGH The contract itself shouldn&#39;t enforce it, to allow backwards compatibility with contracts deployed before</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">approve</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_spender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">success</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="allowance" tabindex="-1">allowance <a class="header-anchor" href="#allowance" aria-label="Permalink to &quot;allowance&quot;">​</a></h4><p>Returns the amount which <code>_spender</code> is still allowed to withdraw from <code>_owner</code>.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">allowance</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_owner</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_spender</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">view</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">remaining</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><h4 id="transfer-1" tabindex="-1">Transfer <a class="header-anchor" href="#transfer-1" aria-label="Permalink to &quot;Transfer&quot;">​</a></h4><p>MUST trigger when tokens are transferred, including zero value transfers.</p><p>A token contract which creates new tokens SHOULD trigger a Transfer event with the <code>_from</code> address set to <code>0x0</code> when tokens are created.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">event </span><span style="color:#82AAFF;">Transfer</span><span style="color:#A6ACCD;">(address indexed _from</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> address indexed _to</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> uint256 _value)</span></span></code></pre></div><h4 id="approval" tabindex="-1">Approval <a class="header-anchor" href="#approval" aria-label="Permalink to &quot;Approval&quot;">​</a></h4><p>MUST trigger on any successful call to <code>approve(address _spender, uint256 _value)</code>.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">event </span><span style="color:#82AAFF;">Approval</span><span style="color:#A6ACCD;">(address indexed _owner</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> address indexed _spender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> uint256 _value)</span></span></code></pre></div><h2 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h2><p>There are already plenty of ERC20-compliant tokens deployed on the Ethereum network. Different implementations have been written by various teams that have different trade-offs: from gas saving to improved security.</p><h4 id="example-implementations-are-available-at" tabindex="-1">Example implementations are available at <a class="header-anchor" href="#example-implementations-are-available-at" aria-label="Permalink to &quot;Example implementations are available at&quot;">​</a></h4><ul><li><a href="https://github.com/OpenZeppelin/openzeppelin-solidity/blob/9b3710465583284b8c4c5d2245749246bb2e0094/contracts/token/ERC20/ERC20.sol" target="_blank" rel="noreferrer">OpenZeppelin implementation</a></li><li><a href="https://github.com/ConsenSys/Tokens/blob/fdf687c69d998266a95f15216b1955a4965a0a6d/contracts/eip20/EIP20.sol" target="_blank" rel="noreferrer">ConsenSys implementation</a></li></ul>',58),l=[t];function r(p,c,i,d,A,y){return s(),e("div",null,l)}const u=a(n,[["render",r]]);export{C as __pageData,u as default};
