import{_ as s,o as a,c as e,O as n}from"./chunks/framework.62a149d4.js";const o="/assets/remix-01.e8288556.png",p="/assets/remix-02.9635725b.png",t="/assets/remix-03.cea127cd.png",l="/assets/remix-04.296584d2.png",r="/assets/remix-05.c5585fd2.png",i="/assets/remix-06.4c3e37dc.png",k=JSON.parse('{"title":"使用Remix部署","description":"","frontmatter":{},"headers":[],"relativePath":"zh-tw/smart-contract/deployment/remix.md","filePath":"zh-tw/smart-contract/deployment/remix.md"}'),c={name:"zh-tw/smart-contract/deployment/remix.md"},m=n('<h1 id="使用remix部署" tabindex="-1">使用Remix部署 <a class="header-anchor" href="#使用remix部署" aria-label="Permalink to &quot;使用Remix部署&quot;">​</a></h1><h2 id="概觀" tabindex="-1">概觀 <a class="header-anchor" href="#概觀" aria-label="Permalink to &quot;概觀&quot;">​</a></h2><p><a href="https://remix.ethereum.org" target="_blank" rel="noreferrer">Remix</a>是目前以太坊上最常被使用的智能合約開發環境之一。基於SCS Chain兼容以太坊的特性，Remix 可直接與SCS Chain 網路一起使用。本教程將介紹使用Remix IDE在SCS Chain開發節點上部署和建立基於Solidity的智能合約的過程。</p><h2 id="檢視先決條件" tabindex="-1">檢視先決條件 <a class="header-anchor" href="#檢視先決條件" aria-label="Permalink to &quot;檢視先決條件&quot;">​</a></h2><p>在開始之前，您將需要準備以下內容：</p><ul><li>安裝且設定完畢的<a href="https://metamask.io/" target="_blank" rel="noreferrer">MetaMask</a>以使用您的開發節點</li></ul><h2 id="開始使用remix" tabindex="-1">開始使用Remix <a class="header-anchor" href="#開始使用remix" aria-label="Permalink to &quot;開始使用Remix&quot;">​</a></h2><p>現在，您可以啟動Remix進行操作。在主頁面的Featured Plugins下選擇 SOLIDITY作為Solidity開發配置Remix，接著導航至File Explorers查看。</p><p><img src="'+o+'" alt=""></p><p>您將需要創建一個新文件以保存Solidity智能合約。點擊File Explorers下方的+按鈕並在彈出窗口中輸入文件名MyToken.sol。</p><p><img src="'+p+`" alt=""></p><p>接著，將以下智能合約貼上至彈窗的編輯框內：</p><div class="language-solidity"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// SPDX-License-Identifier: MIT</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">solidity</span><span style="color:#A6ACCD;"> ^0.8.9</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;@openzeppelin/contracts/token/ERC20/ERC20.sol&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">contract</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyToken</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ERC20</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">) </span><span style="color:#82AAFF;">ERC20</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">&quot;MyToken&quot;, &quot;MTK&quot;) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">_mint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg.sender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100000000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">decimals</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>這是一個基於最新OpenZeppelin SRC-20模板編寫的簡易版SRC-20合約。該合約使用MYTOK作為MyToken的符號，並為合約創建者鑄造初始Token。</p><p>接著，導向至側邊選項的Compile並點擊Compile MyToken.sol按鈕。</p><p>您將會看到Remix下載了所有OpenZeppelin的依賴項並完成合約編譯。</p><p>請在MetaMask點擊Next授權Remix使用您所選取的帳戶。</p><p>接著返回Remix界面，您會看到您想要用來部署的帳戶已經通過MetaMask授權登入。</p><p>確認無誤之後，請點擊Deploy。</p><p><img src="`+t+'" alt=""></p><p>隨後，MetaMask將跳出彈窗要求您確認此次部署合約的交易。</p><p>在您點擊Confirm後，部署也隨之完成，您將會在MetaMask上看到您的交易記錄。與此同時，合約也將會在Remix中的Deployed Contracts下出現。</p><p>成功部署合約之後，您便可通過Remix與智能合約進行交互。</p><p>將頁面下滑，找到MYTOKEN At，如果您複製合約地址並將它粘貼在balanceOf欄位中，您可以看到使用者地址上的帳戶全部餘額。點擊合約名稱和地址旁邊的按鈕可複製合約地址。</p><p><img src="'+l+'" alt=""></p><h2 id="通過metamask與src-20進行交互" tabindex="-1">通過MetaMask與SRC-20進行交互 <a class="header-anchor" href="#通過metamask與src-20進行交互" aria-label="Permalink to &quot;通過MetaMask與SRC-20進行交互&quot;">​</a></h2><p>現在，打開MetaMask添加剛部署的SRC-20 Token。在操作之前先確認您已在Remix上複製了合約地址。回到MetaMask，如下圖所示，點擊Add Token。請確保您現在所操作的帳戶為已部署合約的帳戶。</p><p><img src="'+r+'" alt=""></p><p>將已複製的合約地址粘貼至Custom Token欄位內，與此同時Token Symbol和Decimals of Precision欄位會自動填充。</p><p><img src="'+i+'" alt=""></p>',30),C=[m];function y(D,d,A,F,h,x){return a(),e("div",null,C)}const u=s(c,[["render",y]]);export{k as __pageData,u as default};
