import{_ as s,o as a,c as n,O as l}from"./chunks/framework.4afe7240.js";const A=JSON.parse('{"title":"Ethers.js","description":"","frontmatter":{},"headers":[],"relativePath":"zh/sdk/ethersjs.md","filePath":"zh/sdk/ethersjs.md"}'),p={name:"zh/sdk/ethersjs.md"},o=l(`<h1 id="ethers-js" tabindex="-1">Ethers.js <a class="header-anchor" href="#ethers-js" aria-label="Permalink to &quot;Ethers.js&quot;">​</a></h1><h2 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h2><p>Ethers.js代码库提供用户使用JavaScript与以太坊节点交互的多样工具，类似于Web3.js。SCS Chain拥有与以太坊相似的API供用户使用，其与以太坊风格的JSON RPC调用完全兼容。因此，开发者可以利用此兼容特性并使用Ethers.js库与SCS Chain节点交互，与在以太坊操作相同。您可以在此文章了解更多关于Ethers.js的信息。</p><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><p>首先，您需要创建一个目录，以存储您在本教程中将要创建的所有文件：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">project-demo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">project-demo</span></span></code></pre></div><p>您将需要安装Ethers.js代码库和Solidity编译器。您可以通过运行以下命令来安装两者的NPM安装包：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ethers</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">solc@0.8.0</span></span></code></pre></div><h2 id="设置ehters提供商" tabindex="-1">设置Ehters提供商 <a class="header-anchor" href="#设置ehters提供商" aria-label="Permalink to &quot;设置Ehters提供商&quot;">​</a></h2><p>您将会创建提供不同功能的脚本，如发送交易、部署合约以及与一个已部署合约交互。在大部分的脚本中，您需要创建一个Ethers提供者与网络交互。</p><ol><li>导入ethers代码库</li><li>定义providerRPC标的，包括您希望在其上发送交易的网络配置。您将会需要包含网络的name、rpc和chainId</li><li>使用ethers.JsonRpcProvider函数创建provider</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. Add the Ethers provider logic here:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {...}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. Define network configurations</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> providerRPC </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">scs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">SCS Chain</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">rpc</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">INSERT_RPC_API_ENDPOINT</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">chainId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1969</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// testnet 1969, mainnet 1970</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. Create ethers provider</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> provider </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> ethers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">JsonRpcProvider</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  providerRPC</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rpc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">chainId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> providerRPC</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">chainId</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> providerRPC</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="查看余额" tabindex="-1">查看余额 <a class="header-anchor" href="#查看余额" aria-label="Permalink to &quot;查看余额&quot;">​</a></h2><p>首先，您可以运行以下命令创建一个balances.js文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">touch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">balances.js</span></span></code></pre></div><p>接下来，您将为此文件创建脚本并完成以下步骤：</p><ol><li>设置Ethers提供者</li><li>定义addressFrom和addressTo变量</li><li>创建打包了provider.getBalance函数的异步balances函数</li><li>使用provider.getBalance函数获取addressFrom和addressTo地址的余额。您也可以使用ethers.formatEther函数将余额转换成以ETH为单位的数字便于阅读</li><li>最后，运行balances函数</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. Add the Ethers provider logic here:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {...}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. Create address variables</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> addressFrom </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ADDRESS-FROM-HERE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> addressTo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ADDRESS-TO-HERE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. Create balances function</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> balances </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 4. Fetch balances</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">balanceFrom</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ethers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">formatEther</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">provider</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBalance</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">addressFrom</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">balanceTo</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ethers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">formatEther</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">provider</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBalance</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">addressTo</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">The balance of </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">addressFrom</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> is: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">balanceFrom</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> SCS</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">The balance of </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">addressTo</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> is: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">balanceTo</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> SCS</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 5. Call the balances function</span></span>
<span class="line"><span style="color:#82AAFF;">balances</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>您可以运行以下命令以运行脚本并获取账户余额：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">balances.js</span></span></code></pre></div><h2 id="发送交易" tabindex="-1">发送交易 <a class="header-anchor" href="#发送交易" aria-label="Permalink to &quot;发送交易&quot;">​</a></h2><p>首先，您可以运行以下命令创建一个transaction.js文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">touch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">transaction.js</span></span></code></pre></div><p>接下来，您将为此文件创建脚本并完成以下步骤：</p><ol><li>设置Ethers提供者</li><li>定义privateKey和addressTo变量。此处需要私钥以创建一个钱包实例。请注意：此处操作仅用于演示目的，请勿将您的私钥存储在JavaScript文件中</li><li>使用先前步骤中的privateKey和provider创建一个钱包。此钱包实例将会被用于签署交易</li><li>创建打包了交易标的以及wallet.sendTransaction函数的异步send函数</li><li>创建仅需要接受者地址以及发送数量的交易标的。注意，您可以使用ethers.parseEther，其能够处理Ether至Wei的必要单位换算，如同使用ethers.parseUnits(value, &#39;ether&#39;)</li><li>使用wallet.sendTransaction函数发送交易，然后使用await等待交易处理完毕并返回交易回执</li><li>最后，运行send函数</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. Add the Ethers provider logic here:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {...}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. Create account variables</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> account_from </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">privateKey</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YOUR-PRIVATE-KEY-HERE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> addressTo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ADDRESS-TO-HERE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. Create wallet</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> wallet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> ethers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Wallet</span><span style="color:#A6ACCD;">(account_from</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">privateKey</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> provider)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4. Create send function</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> send </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Attempting to send transaction from </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">wallet</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">address</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> to </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">addressTo</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 5. Create tx object</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    to</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">addressTo</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ethers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parseEther</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 6. Sign and send tx - wait for receipt</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createReceipt</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">wallet</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendTransaction</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">tx</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createReceipt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">wait</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Transaction successful with hash: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">createReceipt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 7. Call the send function</span></span>
<span class="line"><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>您可以在终端运行以下命令以运行脚本：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">transaction.js</span></span></code></pre></div>`,28),e=[o];function t(c,r,y,D,F,i){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
